name: gocept.amqprun

on:
  push:
  schedule:
    - cron: '0 5 * * MON-FRI'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9-dev]

    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
        options: --label rabbitmq

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      if: matrix.python-version != '3.9-dev'
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Python ${{ matrix.python-version }} (deadsnakes)
      uses: deadsnakes/action@v1.0.0
      if: matrix.python-version == '3.9-dev'
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('buildout.cfg') }}-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/cache@v1
      with:
        path: eggs
        key: ${{ runner.os }}-eggs-${{ hashFiles('buildout.cfg') }}-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-eggs-

    - name: Install dependencies
      run: |
        pip install -U tox

    - name: Test
      env:
        AMQP_RABBITMQCTL: docker exec $(docker ps -aqf "label=rabbitmq") rabbitmqctl
      run: |
        tox -e py
